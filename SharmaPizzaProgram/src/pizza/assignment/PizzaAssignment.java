//Akash Sharma Pizza Project
//04.15.2019
//This is my Pizza Project. It lets the user make a order and then get a reciept based on the data entered.
package pizza.assignment;

import java.text.DecimalFormat;

/**
 *
 * @author aksha5852
 */
public class PizzaAssignment extends javax.swing.JFrame {
    //Initialize the variables and decimal format
    DecimalFormat money = new DecimalFormat ("$#,##0.00");
    int numberToppings;
    double costOfPizzaBeforeToppings;
    double costOfSmallPizza = 5;
    double costOfMediumPizza = 8;
    double costOfLargePizza = 10;
    double costOfExtraLargePizza = 12;
    String discountCode = "Akash14";
    double discountPercent = .15;
    double pricePerTopping;
    double totalPrice;
    double subTotal;
    double totalPricesToppings;
    double costOfPop;
    /**
     * Creates new form PizzaAssignment
     */
    public PizzaAssignment() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSize = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        btnPop = new javax.swing.ButtonGroup();
        btnReciept = new javax.swing.JButton();
        radMedium = new javax.swing.JRadioButton();
        radLarge = new javax.swing.JRadioButton();
        radSmall = new javax.swing.JRadioButton();
        radExtraLarge = new javax.swing.JRadioButton();
        lblSize = new javax.swing.JLabel();
        lblToppings = new javax.swing.JLabel();
        radGreenPeppers = new javax.swing.JRadioButton();
        radMushrooms = new javax.swing.JRadioButton();
        radOnions = new javax.swing.JRadioButton();
        radTomatos = new javax.swing.JRadioButton();
        radPepperoni = new javax.swing.JRadioButton();
        radHam = new javax.swing.JRadioButton();
        radExtraCheese = new javax.swing.JRadioButton();
        radPineapple = new javax.swing.JRadioButton();
        scrollDesign = new javax.swing.JScrollPane();
        txtOUTPUT = new javax.swing.JTextArea();
        lblCostPerTopping = new javax.swing.JLabel();
        txtDiscount = new javax.swing.JTextField();
        lblDiscount = new javax.swing.JLabel();
        radSprite = new javax.swing.JRadioButton();
        radRootBeer = new javax.swing.JRadioButton();
        radDrPep = new javax.swing.JRadioButton();
        radPepsi = new javax.swing.JRadioButton();
        lblPop = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 0, 102));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        btnReciept.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        btnReciept.setText("Click Here For Reciept");
        btnReciept.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.white, java.awt.Color.black, java.awt.Color.white));
        btnReciept.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnReciept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecieptActionPerformed(evt);
            }
        });

        btnSize.add(radMedium);
        radMedium.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        radMedium.setText("Medium");

        btnSize.add(radLarge);
        radLarge.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        radLarge.setText("Large");

        btnSize.add(radSmall);
        radSmall.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        radSmall.setText("Small");

        btnSize.add(radExtraLarge);
        radExtraLarge.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        radExtraLarge.setText("Extra Large");

        lblSize.setFont(new java.awt.Font("Gadugi", 1, 11)); // NOI18N
        lblSize.setText("Select a size:");

        lblToppings.setFont(new java.awt.Font("Gadugi", 1, 11)); // NOI18N
        lblToppings.setText("Select toppings:");

        radGreenPeppers.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        radGreenPeppers.setText("Green Peppers");

        radMushrooms.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        radMushrooms.setText("Mushrooms");

        radOnions.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        radOnions.setText("Onions");
        radOnions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radOnionsActionPerformed(evt);
            }
        });

        radTomatos.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        radTomatos.setText("Tomatos");

        radPepperoni.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        radPepperoni.setText("Pepperoni");

        radHam.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        radHam.setText("Ham");

        radExtraCheese.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        radExtraCheese.setText("Extra Cheese");

        radPineapple.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        radPineapple.setText("Pineapple");

        scrollDesign.setBackground(new java.awt.Color(255, 102, 0));

        txtOUTPUT.setColumns(20);
        txtOUTPUT.setFont(new java.awt.Font("Monospaced", 1, 13)); // NOI18N
        txtOUTPUT.setRows(5);
        scrollDesign.setViewportView(txtOUTPUT);

        lblCostPerTopping.setFont(new java.awt.Font("Lucida Bright", 0, 11)); // NOI18N

        txtDiscount.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txtDiscount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtDiscount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiscountActionPerformed(evt);
            }
        });

        lblDiscount.setFont(new java.awt.Font("Lucida Bright", 0, 11)); // NOI18N
        lblDiscount.setText("Enter Discount Code:");

        btnPop.add(radSprite);
        radSprite.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        radSprite.setText("Sprite");

        btnPop.add(radRootBeer);
        radRootBeer.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        radRootBeer.setText("Root Beer");

        btnPop.add(radDrPep);
        radDrPep.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        radDrPep.setText("Dr. Pepper");

        btnPop.add(radPepsi);
        radPepsi.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        radPepsi.setText("Pepsi");

        lblPop.setFont(new java.awt.Font("Gadugi", 1, 11)); // NOI18N
        lblPop.setText("Select a pop:");

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pizza/assignment/Sharmnas2.png"))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(scrollDesign)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnReciept, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblDiscount)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtDiscount))
                        .addComponent(lblCostPerTopping, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSize)
                            .addComponent(radSmall)
                            .addComponent(radMedium)
                            .addComponent(radLarge)
                            .addComponent(radExtraLarge)
                            .addComponent(lblPop)
                            .addComponent(radPepsi)
                            .addComponent(radDrPep)
                            .addComponent(radRootBeer)
                            .addComponent(radSprite))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radGreenPeppers)
                            .addComponent(radMushrooms)
                            .addComponent(radTomatos)
                            .addComponent(radOnions)
                            .addComponent(lblToppings)
                            .addComponent(radExtraCheese)
                            .addComponent(radPineapple)
                            .addComponent(radPepperoni)
                            .addComponent(radHam))))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(scrollDesign))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSize)
                            .addComponent(lblToppings))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(radSmall)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radMedium)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radLarge)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radExtraLarge))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(radOnions)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radGreenPeppers)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radMushrooms)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radTomatos)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radPepperoni)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radExtraCheese)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radPineapple)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radHam))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(lblPop)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radPepsi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radDrPep)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radRootBeer)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radSprite)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblCostPerTopping, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(btnReciept, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblDiscount)
                                .addComponent(txtDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRecieptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecieptActionPerformed
        //Reset values 
        numberToppings = 0;
        costOfPizzaBeforeToppings = 0;
        discountPercent = .15;
        pricePerTopping = 0;
        totalPrice = 0;
        subTotal = 0;
        totalPricesToppings = 0;
        //Checks the size of the pizza selected and determines a pizza price and price per topping based off of that.
        if (radSmall.isSelected()) {
            costOfPizzaBeforeToppings = costOfSmallPizza;
            pricePerTopping = 0.50;
        } else if (radMedium.isSelected()) {
            costOfPizzaBeforeToppings = costOfMediumPizza;
            pricePerTopping = 0.75;
        } else if (radLarge.isSelected()) {
            costOfPizzaBeforeToppings = costOfLargePizza;
            pricePerTopping = 1;
        } else if (radExtraLarge.isSelected()) {
            costOfPizzaBeforeToppings = costOfExtraLargePizza;
            pricePerTopping = 1.25;
        //If the user enters no information for size it will not display any results and just ask the user to choose a size.
        } else {
            txtOUTPUT.setText("Please choose a size...");
        }
        //Checks to see how many toppings were selected, for every topping selected add one to the total number of toppings.
        if (radExtraCheese.isSelected()) {
            numberToppings++;
        }

        if (radPepperoni.isSelected()) {
            numberToppings++;
        }

        if (radGreenPeppers.isSelected()) {
            numberToppings++;
        }

        if (radOnions.isSelected()) {
            numberToppings++;
        }

        if (radPineapple.isSelected()) {
            numberToppings++;
        }

        if (radTomatos.isSelected()) {
            numberToppings++;
        }

        if (radMushrooms.isSelected()) {
            numberToppings++;
        }

        if (radHam.isSelected()) {
            numberToppings++;
        }
        //Calculate a total toppings price by multiplying number of toppings by the cost per topping
        totalPricesToppings = numberToppings * pricePerTopping;
        //Checks to see if the user selected any pops and if they did then they will add the cost of pop to the subtotal.
        if(radSprite.isSelected() || radRootBeer.isSelected() || radPepsi.isSelected() || radDrPep.isSelected()){
            costOfPop = 1;
            subTotal = totalPricesToppings + costOfPizzaBeforeToppings + costOfPop;
        }
        //If the user selects no pop the subtotal does not have any cost of pop.
        else{
            subTotal = totalPricesToppings + costOfPizzaBeforeToppings;
        }
        //Checks to see if the discount code entered is correct and applies discount to the subtotal based off of that.
        if (txtDiscount.getText().equals(discountCode)) {
            totalPrice = subTotal - (subTotal * discountPercent);
        } else {
            totalPrice = subTotal;
            discountPercent = 0;
        }
        //Outputs results if pizza size was selected and if it was not it will ask the user for a size.
        if (radSmall.isSelected() || radMedium.isSelected() || radLarge.isSelected() || radExtraLarge.isSelected()) {
            txtOUTPUT.setText("Cost:\t\t\t" + money.format(costOfPizzaBeforeToppings) + "\nNumber Of Toppings:\t" + numberToppings + "\nCost Of Toppings:\t"  + money.format(totalPricesToppings) + "\nCost of Pop:\t\t" + money.format(costOfPop)+ "\nSubtotal:\t\t" + money.format(subTotal) + "\nDiscount:\t\t" + money.format(discountPercent * subTotal) + "\nTotal:\t\t\t" + money.format(totalPrice));
            lblCostPerTopping.setText("Price per topping: " + money.format(pricePerTopping));
        } else {
            txtOUTPUT.setText("Please choose a size...");
    }//GEN-LAST:event_btnRecieptActionPerformed
    }
    private void radOnionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radOnionsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radOnionsActionPerformed

    private void txtDiscountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiscountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiscountActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PizzaAssignment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PizzaAssignment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PizzaAssignment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PizzaAssignment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PizzaAssignment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnPop;
    private javax.swing.JButton btnReciept;
    private javax.swing.ButtonGroup btnSize;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCostPerTopping;
    private javax.swing.JLabel lblDiscount;
    private javax.swing.JLabel lblPop;
    private javax.swing.JLabel lblSize;
    private javax.swing.JLabel lblToppings;
    private javax.swing.JRadioButton radDrPep;
    private javax.swing.JRadioButton radExtraCheese;
    private javax.swing.JRadioButton radExtraLarge;
    private javax.swing.JRadioButton radGreenPeppers;
    private javax.swing.JRadioButton radHam;
    private javax.swing.JRadioButton radLarge;
    private javax.swing.JRadioButton radMedium;
    private javax.swing.JRadioButton radMushrooms;
    private javax.swing.JRadioButton radOnions;
    private javax.swing.JRadioButton radPepperoni;
    private javax.swing.JRadioButton radPepsi;
    private javax.swing.JRadioButton radPineapple;
    private javax.swing.JRadioButton radRootBeer;
    private javax.swing.JRadioButton radSmall;
    private javax.swing.JRadioButton radSprite;
    private javax.swing.JRadioButton radTomatos;
    private javax.swing.JScrollPane scrollDesign;
    private javax.swing.JTextField txtDiscount;
    private javax.swing.JTextArea txtOUTPUT;
    // End of variables declaration//GEN-END:variables
}
